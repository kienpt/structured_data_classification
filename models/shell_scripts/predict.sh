python model.py --action=predict --index_file=../data_collection/commoncrawl/recipe_data/recipe_index.json --prop_names_file=recipe_prop_names.txt --model_dir=../data_collection/commoncrawl/recipe_data/model_round1/ --classify_outfile=../data_collection/commoncrawl/recipe_data/recipe_index_predicted.json
#python model.py --action=predict --index_file=../data_collection/commoncrawl/recipe_data/recipe_index.json --prop_names_file=recipe_prop_names.txt --model_dir=../data_collection/commoncrawl/recipe_data/model_round1_ing_ins/ --classify_outfile=../data_collection/commoncrawl/recipe_data/recipe_index_predicted_ing_ins.json #only use ingredient and instruction to construct the vector for second round. It turns out that this is not a good idea because the noise isn't from other properties but from instruction and ingredient itself. 
